/**
 * Copyright 2023 AntGroup CO., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master.proto

package com.antfin.arc.cluster.proto;

public interface WorkerMetricsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:WorkerMetrics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string host = 1;</code>
   */
  String getHost();
  /**
   * <code>string host = 1;</code>
   */
  com.google.protobuf.ByteString
      getHostBytes();

  /**
   * <code>int32 pid = 2;</code>
   */
  int getPid();

  /**
   * <code>int64 heapCommittedMB = 3;</code>
   */
  long getHeapCommittedMB();

  /**
   * <code>int64 heapUsedMB = 4;</code>
   */
  long getHeapUsedMB();

  /**
   * <code>double heapUsedRatio = 5;</code>
   */
  double getHeapUsedRatio();

  /**
   * <code>int64 fgcCount = 6;</code>
   */
  long getFgcCount();

  /**
   * <code>int64 fgcTime = 7;</code>
   */
  long getFgcTime();

  /**
   * <code>int64 gcTime = 8;</code>
   */
  long getGcTime();

  /**
   * <code>int64 gcCount = 9;</code>
   */
  long getGcCount();

  /**
   * <code>double avgLoad = 10;</code>
   */
  double getAvgLoad();

  /**
   * <code>int32 availCores = 11;</code>
   */
  int getAvailCores();

  /**
   * <code>double processCpu = 12;</code>
   */
  double getProcessCpu();

  /**
   * <code>int64 reportTime = 13;</code>
   */
  long getReportTime();

  /**
   * <code>int32 taskNum = 14;</code>
   */
  int getTaskNum();

  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  java.util.List<Task>
      getTasksList();
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  Task getTasks(int index);
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  int getTasksCount();
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  java.util.List<? extends TaskOrBuilder>
      getTasksOrBuilderList();
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  TaskOrBuilder getTasksOrBuilder(
      int index);

  /**
   * <code>int32 activeThreads = 16;</code>
   */
  int getActiveThreads();
}
