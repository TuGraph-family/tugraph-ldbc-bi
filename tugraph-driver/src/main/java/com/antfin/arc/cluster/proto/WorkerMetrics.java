/**
 * Copyright 2023 AntGroup CO., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master.proto

package com.antfin.arc.cluster.proto;

/**
 * Protobuf type {@code WorkerMetrics}
 */
public  final class WorkerMetrics extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:WorkerMetrics)
    WorkerMetricsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WorkerMetrics.newBuilder() to construct.
  private WorkerMetrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WorkerMetrics() {
    host_ = "";
    tasks_ = java.util.Collections.emptyList();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private WorkerMetrics(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            String s = input.readStringRequireUtf8();

            host_ = s;
            break;
          }
          case 16: {

            pid_ = input.readInt32();
            break;
          }
          case 24: {

            heapCommittedMB_ = input.readInt64();
            break;
          }
          case 32: {

            heapUsedMB_ = input.readInt64();
            break;
          }
          case 41: {

            heapUsedRatio_ = input.readDouble();
            break;
          }
          case 48: {

            fgcCount_ = input.readInt64();
            break;
          }
          case 56: {

            fgcTime_ = input.readInt64();
            break;
          }
          case 64: {

            gcTime_ = input.readInt64();
            break;
          }
          case 72: {

            gcCount_ = input.readInt64();
            break;
          }
          case 81: {

            avgLoad_ = input.readDouble();
            break;
          }
          case 88: {

            availCores_ = input.readInt32();
            break;
          }
          case 97: {

            processCpu_ = input.readDouble();
            break;
          }
          case 104: {

            reportTime_ = input.readInt64();
            break;
          }
          case 112: {

            taskNum_ = input.readInt32();
            break;
          }
          case 122: {
            if (!((mutable_bitField0_ & 0x00004000) != 0)) {
              tasks_ = new java.util.ArrayList<Task>();
              mutable_bitField0_ |= 0x00004000;
            }
            tasks_.add(
                input.readMessage(Task.parser(), extensionRegistry));
            break;
          }
          case 128: {

            activeThreads_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00004000) != 0)) {
        tasks_ = java.util.Collections.unmodifiableList(tasks_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Master.internal_static_WorkerMetrics_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Master.internal_static_WorkerMetrics_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            WorkerMetrics.class, Builder.class);
  }

  private int bitField0_;
  public static final int HOST_FIELD_NUMBER = 1;
  private volatile Object host_;
  /**
   * <code>string host = 1;</code>
   */
  public String getHost() {
    Object ref = host_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      host_ = s;
      return s;
    }
  }
  /**
   * <code>string host = 1;</code>
   */
  public com.google.protobuf.ByteString
      getHostBytes() {
    Object ref = host_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      host_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PID_FIELD_NUMBER = 2;
  private int pid_;
  /**
   * <code>int32 pid = 2;</code>
   */
  public int getPid() {
    return pid_;
  }

  public static final int HEAPCOMMITTEDMB_FIELD_NUMBER = 3;
  private long heapCommittedMB_;
  /**
   * <code>int64 heapCommittedMB = 3;</code>
   */
  public long getHeapCommittedMB() {
    return heapCommittedMB_;
  }

  public static final int HEAPUSEDMB_FIELD_NUMBER = 4;
  private long heapUsedMB_;
  /**
   * <code>int64 heapUsedMB = 4;</code>
   */
  public long getHeapUsedMB() {
    return heapUsedMB_;
  }

  public static final int HEAPUSEDRATIO_FIELD_NUMBER = 5;
  private double heapUsedRatio_;
  /**
   * <code>double heapUsedRatio = 5;</code>
   */
  public double getHeapUsedRatio() {
    return heapUsedRatio_;
  }

  public static final int FGCCOUNT_FIELD_NUMBER = 6;
  private long fgcCount_;
  /**
   * <code>int64 fgcCount = 6;</code>
   */
  public long getFgcCount() {
    return fgcCount_;
  }

  public static final int FGCTIME_FIELD_NUMBER = 7;
  private long fgcTime_;
  /**
   * <code>int64 fgcTime = 7;</code>
   */
  public long getFgcTime() {
    return fgcTime_;
  }

  public static final int GCTIME_FIELD_NUMBER = 8;
  private long gcTime_;
  /**
   * <code>int64 gcTime = 8;</code>
   */
  public long getGcTime() {
    return gcTime_;
  }

  public static final int GCCOUNT_FIELD_NUMBER = 9;
  private long gcCount_;
  /**
   * <code>int64 gcCount = 9;</code>
   */
  public long getGcCount() {
    return gcCount_;
  }

  public static final int AVGLOAD_FIELD_NUMBER = 10;
  private double avgLoad_;
  /**
   * <code>double avgLoad = 10;</code>
   */
  public double getAvgLoad() {
    return avgLoad_;
  }

  public static final int AVAILCORES_FIELD_NUMBER = 11;
  private int availCores_;
  /**
   * <code>int32 availCores = 11;</code>
   */
  public int getAvailCores() {
    return availCores_;
  }

  public static final int PROCESSCPU_FIELD_NUMBER = 12;
  private double processCpu_;
  /**
   * <code>double processCpu = 12;</code>
   */
  public double getProcessCpu() {
    return processCpu_;
  }

  public static final int REPORTTIME_FIELD_NUMBER = 13;
  private long reportTime_;
  /**
   * <code>int64 reportTime = 13;</code>
   */
  public long getReportTime() {
    return reportTime_;
  }

  public static final int TASKNUM_FIELD_NUMBER = 14;
  private int taskNum_;
  /**
   * <code>int32 taskNum = 14;</code>
   */
  public int getTaskNum() {
    return taskNum_;
  }

  public static final int TASKS_FIELD_NUMBER = 15;
  private java.util.List<Task> tasks_;
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  public java.util.List<Task> getTasksList() {
    return tasks_;
  }
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  public java.util.List<? extends TaskOrBuilder>
      getTasksOrBuilderList() {
    return tasks_;
  }
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  public int getTasksCount() {
    return tasks_.size();
  }
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  public Task getTasks(int index) {
    return tasks_.get(index);
  }
  /**
   * <code>repeated .Task tasks = 15;</code>
   */
  public TaskOrBuilder getTasksOrBuilder(
      int index) {
    return tasks_.get(index);
  }

  public static final int ACTIVETHREADS_FIELD_NUMBER = 16;
  private int activeThreads_;
  /**
   * <code>int32 activeThreads = 16;</code>
   */
  public int getActiveThreads() {
    return activeThreads_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getHostBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, host_);
    }
    if (pid_ != 0) {
      output.writeInt32(2, pid_);
    }
    if (heapCommittedMB_ != 0L) {
      output.writeInt64(3, heapCommittedMB_);
    }
    if (heapUsedMB_ != 0L) {
      output.writeInt64(4, heapUsedMB_);
    }
    if (heapUsedRatio_ != 0D) {
      output.writeDouble(5, heapUsedRatio_);
    }
    if (fgcCount_ != 0L) {
      output.writeInt64(6, fgcCount_);
    }
    if (fgcTime_ != 0L) {
      output.writeInt64(7, fgcTime_);
    }
    if (gcTime_ != 0L) {
      output.writeInt64(8, gcTime_);
    }
    if (gcCount_ != 0L) {
      output.writeInt64(9, gcCount_);
    }
    if (avgLoad_ != 0D) {
      output.writeDouble(10, avgLoad_);
    }
    if (availCores_ != 0) {
      output.writeInt32(11, availCores_);
    }
    if (processCpu_ != 0D) {
      output.writeDouble(12, processCpu_);
    }
    if (reportTime_ != 0L) {
      output.writeInt64(13, reportTime_);
    }
    if (taskNum_ != 0) {
      output.writeInt32(14, taskNum_);
    }
    for (int i = 0; i < tasks_.size(); i++) {
      output.writeMessage(15, tasks_.get(i));
    }
    if (activeThreads_ != 0) {
      output.writeInt32(16, activeThreads_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getHostBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, host_);
    }
    if (pid_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, pid_);
    }
    if (heapCommittedMB_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, heapCommittedMB_);
    }
    if (heapUsedMB_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, heapUsedMB_);
    }
    if (heapUsedRatio_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, heapUsedRatio_);
    }
    if (fgcCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(6, fgcCount_);
    }
    if (fgcTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, fgcTime_);
    }
    if (gcTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(8, gcTime_);
    }
    if (gcCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, gcCount_);
    }
    if (avgLoad_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(10, avgLoad_);
    }
    if (availCores_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, availCores_);
    }
    if (processCpu_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(12, processCpu_);
    }
    if (reportTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(13, reportTime_);
    }
    if (taskNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, taskNum_);
    }
    for (int i = 0; i < tasks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, tasks_.get(i));
    }
    if (activeThreads_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, activeThreads_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof WorkerMetrics)) {
      return super.equals(obj);
    }
    WorkerMetrics other = (WorkerMetrics) obj;

    if (!getHost()
        .equals(other.getHost())) return false;
    if (getPid()
        != other.getPid()) return false;
    if (getHeapCommittedMB()
        != other.getHeapCommittedMB()) return false;
    if (getHeapUsedMB()
        != other.getHeapUsedMB()) return false;
    if (Double.doubleToLongBits(getHeapUsedRatio())
        != Double.doubleToLongBits(
            other.getHeapUsedRatio())) return false;
    if (getFgcCount()
        != other.getFgcCount()) return false;
    if (getFgcTime()
        != other.getFgcTime()) return false;
    if (getGcTime()
        != other.getGcTime()) return false;
    if (getGcCount()
        != other.getGcCount()) return false;
    if (Double.doubleToLongBits(getAvgLoad())
        != Double.doubleToLongBits(
            other.getAvgLoad())) return false;
    if (getAvailCores()
        != other.getAvailCores()) return false;
    if (Double.doubleToLongBits(getProcessCpu())
        != Double.doubleToLongBits(
            other.getProcessCpu())) return false;
    if (getReportTime()
        != other.getReportTime()) return false;
    if (getTaskNum()
        != other.getTaskNum()) return false;
    if (!getTasksList()
        .equals(other.getTasksList())) return false;
    if (getActiveThreads()
        != other.getActiveThreads()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HOST_FIELD_NUMBER;
    hash = (53 * hash) + getHost().hashCode();
    hash = (37 * hash) + PID_FIELD_NUMBER;
    hash = (53 * hash) + getPid();
    hash = (37 * hash) + HEAPCOMMITTEDMB_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapCommittedMB());
    hash = (37 * hash) + HEAPUSEDMB_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHeapUsedMB());
    hash = (37 * hash) + HEAPUSEDRATIO_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getHeapUsedRatio()));
    hash = (37 * hash) + FGCCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFgcCount());
    hash = (37 * hash) + FGCTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFgcTime());
    hash = (37 * hash) + GCTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getGcTime());
    hash = (37 * hash) + GCCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getGcCount());
    hash = (37 * hash) + AVGLOAD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getAvgLoad()));
    hash = (37 * hash) + AVAILCORES_FIELD_NUMBER;
    hash = (53 * hash) + getAvailCores();
    hash = (37 * hash) + PROCESSCPU_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getProcessCpu()));
    hash = (37 * hash) + REPORTTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getReportTime());
    hash = (37 * hash) + TASKNUM_FIELD_NUMBER;
    hash = (53 * hash) + getTaskNum();
    if (getTasksCount() > 0) {
      hash = (37 * hash) + TASKS_FIELD_NUMBER;
      hash = (53 * hash) + getTasksList().hashCode();
    }
    hash = (37 * hash) + ACTIVETHREADS_FIELD_NUMBER;
    hash = (53 * hash) + getActiveThreads();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static WorkerMetrics parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static WorkerMetrics parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static WorkerMetrics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static WorkerMetrics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static WorkerMetrics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static WorkerMetrics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static WorkerMetrics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static WorkerMetrics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static WorkerMetrics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static WorkerMetrics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static WorkerMetrics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static WorkerMetrics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(WorkerMetrics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code WorkerMetrics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:WorkerMetrics)
      WorkerMetricsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Master.internal_static_WorkerMetrics_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Master.internal_static_WorkerMetrics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              WorkerMetrics.class, Builder.class);
    }

    // Construct using com.antfin.arc.cluster.proto.WorkerMetrics.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTasksFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      host_ = "";

      pid_ = 0;

      heapCommittedMB_ = 0L;

      heapUsedMB_ = 0L;

      heapUsedRatio_ = 0D;

      fgcCount_ = 0L;

      fgcTime_ = 0L;

      gcTime_ = 0L;

      gcCount_ = 0L;

      avgLoad_ = 0D;

      availCores_ = 0;

      processCpu_ = 0D;

      reportTime_ = 0L;

      taskNum_ = 0;

      if (tasksBuilder_ == null) {
        tasks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
      } else {
        tasksBuilder_.clear();
      }
      activeThreads_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Master.internal_static_WorkerMetrics_descriptor;
    }

    @Override
    public WorkerMetrics getDefaultInstanceForType() {
      return WorkerMetrics.getDefaultInstance();
    }

    @Override
    public WorkerMetrics build() {
      WorkerMetrics result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public WorkerMetrics buildPartial() {
      WorkerMetrics result = new WorkerMetrics(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.host_ = host_;
      result.pid_ = pid_;
      result.heapCommittedMB_ = heapCommittedMB_;
      result.heapUsedMB_ = heapUsedMB_;
      result.heapUsedRatio_ = heapUsedRatio_;
      result.fgcCount_ = fgcCount_;
      result.fgcTime_ = fgcTime_;
      result.gcTime_ = gcTime_;
      result.gcCount_ = gcCount_;
      result.avgLoad_ = avgLoad_;
      result.availCores_ = availCores_;
      result.processCpu_ = processCpu_;
      result.reportTime_ = reportTime_;
      result.taskNum_ = taskNum_;
      if (tasksBuilder_ == null) {
        if (((bitField0_ & 0x00004000) != 0)) {
          tasks_ = java.util.Collections.unmodifiableList(tasks_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.tasks_ = tasks_;
      } else {
        result.tasks_ = tasksBuilder_.build();
      }
      result.activeThreads_ = activeThreads_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof WorkerMetrics) {
        return mergeFrom((WorkerMetrics)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(WorkerMetrics other) {
      if (other == WorkerMetrics.getDefaultInstance()) return this;
      if (!other.getHost().isEmpty()) {
        host_ = other.host_;
        onChanged();
      }
      if (other.getPid() != 0) {
        setPid(other.getPid());
      }
      if (other.getHeapCommittedMB() != 0L) {
        setHeapCommittedMB(other.getHeapCommittedMB());
      }
      if (other.getHeapUsedMB() != 0L) {
        setHeapUsedMB(other.getHeapUsedMB());
      }
      if (other.getHeapUsedRatio() != 0D) {
        setHeapUsedRatio(other.getHeapUsedRatio());
      }
      if (other.getFgcCount() != 0L) {
        setFgcCount(other.getFgcCount());
      }
      if (other.getFgcTime() != 0L) {
        setFgcTime(other.getFgcTime());
      }
      if (other.getGcTime() != 0L) {
        setGcTime(other.getGcTime());
      }
      if (other.getGcCount() != 0L) {
        setGcCount(other.getGcCount());
      }
      if (other.getAvgLoad() != 0D) {
        setAvgLoad(other.getAvgLoad());
      }
      if (other.getAvailCores() != 0) {
        setAvailCores(other.getAvailCores());
      }
      if (other.getProcessCpu() != 0D) {
        setProcessCpu(other.getProcessCpu());
      }
      if (other.getReportTime() != 0L) {
        setReportTime(other.getReportTime());
      }
      if (other.getTaskNum() != 0) {
        setTaskNum(other.getTaskNum());
      }
      if (tasksBuilder_ == null) {
        if (!other.tasks_.isEmpty()) {
          if (tasks_.isEmpty()) {
            tasks_ = other.tasks_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureTasksIsMutable();
            tasks_.addAll(other.tasks_);
          }
          onChanged();
        }
      } else {
        if (!other.tasks_.isEmpty()) {
          if (tasksBuilder_.isEmpty()) {
            tasksBuilder_.dispose();
            tasksBuilder_ = null;
            tasks_ = other.tasks_;
            bitField0_ = (bitField0_ & ~0x00004000);
            tasksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTasksFieldBuilder() : null;
          } else {
            tasksBuilder_.addAllMessages(other.tasks_);
          }
        }
      }
      if (other.getActiveThreads() != 0) {
        setActiveThreads(other.getActiveThreads());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      WorkerMetrics parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (WorkerMetrics) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private Object host_ = "";
    /**
     * <code>string host = 1;</code>
     */
    public String getHost() {
      Object ref = host_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        host_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string host = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      Object ref = host_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string host = 1;</code>
     */
    public Builder setHost(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      host_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string host = 1;</code>
     */
    public Builder clearHost() {
      
      host_ = getDefaultInstance().getHost();
      onChanged();
      return this;
    }
    /**
     * <code>string host = 1;</code>
     */
    public Builder setHostBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      host_ = value;
      onChanged();
      return this;
    }

    private int pid_ ;
    /**
     * <code>int32 pid = 2;</code>
     */
    public int getPid() {
      return pid_;
    }
    /**
     * <code>int32 pid = 2;</code>
     */
    public Builder setPid(int value) {
      
      pid_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 pid = 2;</code>
     */
    public Builder clearPid() {
      
      pid_ = 0;
      onChanged();
      return this;
    }

    private long heapCommittedMB_ ;
    /**
     * <code>int64 heapCommittedMB = 3;</code>
     */
    public long getHeapCommittedMB() {
      return heapCommittedMB_;
    }
    /**
     * <code>int64 heapCommittedMB = 3;</code>
     */
    public Builder setHeapCommittedMB(long value) {
      
      heapCommittedMB_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 heapCommittedMB = 3;</code>
     */
    public Builder clearHeapCommittedMB() {
      
      heapCommittedMB_ = 0L;
      onChanged();
      return this;
    }

    private long heapUsedMB_ ;
    /**
     * <code>int64 heapUsedMB = 4;</code>
     */
    public long getHeapUsedMB() {
      return heapUsedMB_;
    }
    /**
     * <code>int64 heapUsedMB = 4;</code>
     */
    public Builder setHeapUsedMB(long value) {
      
      heapUsedMB_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 heapUsedMB = 4;</code>
     */
    public Builder clearHeapUsedMB() {
      
      heapUsedMB_ = 0L;
      onChanged();
      return this;
    }

    private double heapUsedRatio_ ;
    /**
     * <code>double heapUsedRatio = 5;</code>
     */
    public double getHeapUsedRatio() {
      return heapUsedRatio_;
    }
    /**
     * <code>double heapUsedRatio = 5;</code>
     */
    public Builder setHeapUsedRatio(double value) {
      
      heapUsedRatio_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double heapUsedRatio = 5;</code>
     */
    public Builder clearHeapUsedRatio() {
      
      heapUsedRatio_ = 0D;
      onChanged();
      return this;
    }

    private long fgcCount_ ;
    /**
     * <code>int64 fgcCount = 6;</code>
     */
    public long getFgcCount() {
      return fgcCount_;
    }
    /**
     * <code>int64 fgcCount = 6;</code>
     */
    public Builder setFgcCount(long value) {
      
      fgcCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 fgcCount = 6;</code>
     */
    public Builder clearFgcCount() {
      
      fgcCount_ = 0L;
      onChanged();
      return this;
    }

    private long fgcTime_ ;
    /**
     * <code>int64 fgcTime = 7;</code>
     */
    public long getFgcTime() {
      return fgcTime_;
    }
    /**
     * <code>int64 fgcTime = 7;</code>
     */
    public Builder setFgcTime(long value) {
      
      fgcTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 fgcTime = 7;</code>
     */
    public Builder clearFgcTime() {
      
      fgcTime_ = 0L;
      onChanged();
      return this;
    }

    private long gcTime_ ;
    /**
     * <code>int64 gcTime = 8;</code>
     */
    public long getGcTime() {
      return gcTime_;
    }
    /**
     * <code>int64 gcTime = 8;</code>
     */
    public Builder setGcTime(long value) {
      
      gcTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 gcTime = 8;</code>
     */
    public Builder clearGcTime() {
      
      gcTime_ = 0L;
      onChanged();
      return this;
    }

    private long gcCount_ ;
    /**
     * <code>int64 gcCount = 9;</code>
     */
    public long getGcCount() {
      return gcCount_;
    }
    /**
     * <code>int64 gcCount = 9;</code>
     */
    public Builder setGcCount(long value) {
      
      gcCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 gcCount = 9;</code>
     */
    public Builder clearGcCount() {
      
      gcCount_ = 0L;
      onChanged();
      return this;
    }

    private double avgLoad_ ;
    /**
     * <code>double avgLoad = 10;</code>
     */
    public double getAvgLoad() {
      return avgLoad_;
    }
    /**
     * <code>double avgLoad = 10;</code>
     */
    public Builder setAvgLoad(double value) {
      
      avgLoad_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double avgLoad = 10;</code>
     */
    public Builder clearAvgLoad() {
      
      avgLoad_ = 0D;
      onChanged();
      return this;
    }

    private int availCores_ ;
    /**
     * <code>int32 availCores = 11;</code>
     */
    public int getAvailCores() {
      return availCores_;
    }
    /**
     * <code>int32 availCores = 11;</code>
     */
    public Builder setAvailCores(int value) {
      
      availCores_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 availCores = 11;</code>
     */
    public Builder clearAvailCores() {
      
      availCores_ = 0;
      onChanged();
      return this;
    }

    private double processCpu_ ;
    /**
     * <code>double processCpu = 12;</code>
     */
    public double getProcessCpu() {
      return processCpu_;
    }
    /**
     * <code>double processCpu = 12;</code>
     */
    public Builder setProcessCpu(double value) {
      
      processCpu_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double processCpu = 12;</code>
     */
    public Builder clearProcessCpu() {
      
      processCpu_ = 0D;
      onChanged();
      return this;
    }

    private long reportTime_ ;
    /**
     * <code>int64 reportTime = 13;</code>
     */
    public long getReportTime() {
      return reportTime_;
    }
    /**
     * <code>int64 reportTime = 13;</code>
     */
    public Builder setReportTime(long value) {
      
      reportTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 reportTime = 13;</code>
     */
    public Builder clearReportTime() {
      
      reportTime_ = 0L;
      onChanged();
      return this;
    }

    private int taskNum_ ;
    /**
     * <code>int32 taskNum = 14;</code>
     */
    public int getTaskNum() {
      return taskNum_;
    }
    /**
     * <code>int32 taskNum = 14;</code>
     */
    public Builder setTaskNum(int value) {
      
      taskNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 taskNum = 14;</code>
     */
    public Builder clearTaskNum() {
      
      taskNum_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<Task> tasks_ =
      java.util.Collections.emptyList();
    private void ensureTasksIsMutable() {
      if (!((bitField0_ & 0x00004000) != 0)) {
        tasks_ = new java.util.ArrayList<Task>(tasks_);
        bitField0_ |= 0x00004000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        Task, Task.Builder, TaskOrBuilder> tasksBuilder_;

    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public java.util.List<Task> getTasksList() {
      if (tasksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tasks_);
      } else {
        return tasksBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public int getTasksCount() {
      if (tasksBuilder_ == null) {
        return tasks_.size();
      } else {
        return tasksBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Task getTasks(int index) {
      if (tasksBuilder_ == null) {
        return tasks_.get(index);
      } else {
        return tasksBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder setTasks(
        int index, Task value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.set(index, value);
        onChanged();
      } else {
        tasksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder setTasks(
        int index, Task.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.set(index, builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder addTasks(Task value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.add(value);
        onChanged();
      } else {
        tasksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder addTasks(
        int index, Task value) {
      if (tasksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTasksIsMutable();
        tasks_.add(index, value);
        onChanged();
      } else {
        tasksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder addTasks(
        Task.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.add(builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder addTasks(
        int index, Task.Builder builderForValue) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.add(index, builderForValue.build());
        onChanged();
      } else {
        tasksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder addAllTasks(
        Iterable<? extends Task> values) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tasks_);
        onChanged();
      } else {
        tasksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder clearTasks() {
      if (tasksBuilder_ == null) {
        tasks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
      } else {
        tasksBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Builder removeTasks(int index) {
      if (tasksBuilder_ == null) {
        ensureTasksIsMutable();
        tasks_.remove(index);
        onChanged();
      } else {
        tasksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Task.Builder getTasksBuilder(
        int index) {
      return getTasksFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public TaskOrBuilder getTasksOrBuilder(
        int index) {
      if (tasksBuilder_ == null) {
        return tasks_.get(index);  } else {
        return tasksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public java.util.List<? extends TaskOrBuilder>
         getTasksOrBuilderList() {
      if (tasksBuilder_ != null) {
        return tasksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tasks_);
      }
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Task.Builder addTasksBuilder() {
      return getTasksFieldBuilder().addBuilder(
          Task.getDefaultInstance());
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public Task.Builder addTasksBuilder(
        int index) {
      return getTasksFieldBuilder().addBuilder(
          index, Task.getDefaultInstance());
    }
    /**
     * <code>repeated .Task tasks = 15;</code>
     */
    public java.util.List<Task.Builder>
         getTasksBuilderList() {
      return getTasksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        Task, Task.Builder, TaskOrBuilder>
        getTasksFieldBuilder() {
      if (tasksBuilder_ == null) {
        tasksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            Task, Task.Builder, TaskOrBuilder>(
                tasks_,
                ((bitField0_ & 0x00004000) != 0),
                getParentForChildren(),
                isClean());
        tasks_ = null;
      }
      return tasksBuilder_;
    }

    private int activeThreads_ ;
    /**
     * <code>int32 activeThreads = 16;</code>
     */
    public int getActiveThreads() {
      return activeThreads_;
    }
    /**
     * <code>int32 activeThreads = 16;</code>
     */
    public Builder setActiveThreads(int value) {
      
      activeThreads_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 activeThreads = 16;</code>
     */
    public Builder clearActiveThreads() {
      
      activeThreads_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:WorkerMetrics)
  }

  // @@protoc_insertion_point(class_scope:WorkerMetrics)
  private static final WorkerMetrics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new WorkerMetrics();
  }

  public static WorkerMetrics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WorkerMetrics>
      PARSER = new com.google.protobuf.AbstractParser<WorkerMetrics>() {
    @Override
    public WorkerMetrics parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new WorkerMetrics(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<WorkerMetrics> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<WorkerMetrics> getParserForType() {
    return PARSER;
  }

  @Override
  public WorkerMetrics getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

