g.V().hasLabel('Person').as('personA')
.both('knows').hasLabel('Person').as('personB')
.outE('studyAt').as('studyAtB').inV().hasLabel('University')
.inE('studyAt').as('studyAtA').outV().hasLabel('Person')
.where(eq('personA'))
.project('personAId','personBId','studyAtAYear','studyAtBYear')
.by(select('personA').id())
.by(select('personB').id())
.by(select('studyAtA').values('classYear'))
.by(select('studyAtB').values('classYear'))
.project('personAId','personBId','diff')
.by(select('personAId')).by(select('personBId'))
.by(math('abs(studyAtAYear-studyAtBYear)+1'))
.group().by(select('personAId','personBId'))
.unfold()
.project('personAId','personBId','weight')
.by(select(keys).select('personAId'))
.by(select(keys).select('personBId'))
.by(select(values).unfold().select('diff').min())
.io('$dataDir/Person_weight20_Person_$taskIndex.csv').write().with(__.map{it.get().get('personAId')+"|"+it.get().get('personBId')+"|"+it.get().get('weight')})