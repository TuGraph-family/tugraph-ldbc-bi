g.V().hasLabel('Person').where(out('isLocatedIn').hasLabel('City').out('isPartOf').hasLabel('Country').has('name','$country1')).as('person1')
.both('knows').as('person2').where(out('isLocatedIn').hasLabel('City').out('isPartOf').hasLabel('Country').has('name','$country2'))
.union(
   __.inE('weight19').where(math('_ % 10').by('weight').is(eq(1))).outV().hasLabel('Person').where(eq('person1'))
      .project('person1.id','person2.id','score','city1.name','caseType')
      .by(__.id())
      .by(__.select('person2').id())
      .by(__.constant(4))
      .by(__.out('isLocatedIn').values('name'))
      .by(__.constant(1)),
   __.outE('weight19').where(math('_ % 10').by('weight').is(eq(1))).inV().hasLabel('Person').where(eq('person1'))
      .project('person1.id','person2.id','score','city1.name','caseType')
      .by(__.id())
      .by(__.select('person2').id())
      .by(__.constant(1))
      .by(__.out('isLocatedIn').values('name'))
      .by(__.constant(2)),
   __.in('hasCreator').hasLabel('Comment','Post').in('likes').hasLabel('Person').where(eq('person1'))
      .project('person1.id','person2.id','score','city1.name','caseType')
      .by(__.id())
      .by(__.select('person2').id())
      .by(__.constant(10))
      .by(__.out('isLocatedIn').values('name'))
      .by(__.constant(3)),
   __.out('likes').hasLabel('Comment','Post').out('hasCreator').hasLabel('Person').where(eq('person1'))
      .project('person1.id','person2.id','score','city1.name','caseType')
      .by(__.id())
      .by(__.select('person2').id())
      .by(__.constant(1))
      .by(__.out('isLocatedIn').values('name'))
      .by(__.constant(4)),
  )
.dedup()
.group()
.by(select('person1.id','person2.id','city1.name'))
.by(select('score').sum())
.unfold()
.group()
.by(select(keys).select('city1.name'))
.unfold()
.project('city1.name','entry')
.by(select(keys))
.by(select(values).unfold().order().by(select(values),desc).by(select(keys).select('person1.id'),asc).by(select(keys).select('person2.id'),asc).limit(1))
.project('person1.id','person2.id','city1.name','score')
.by(select('entry').select(keys).select('person1.id'))
.by(select('entry').select(keys).select('person2.id'))
.by(select('city1.name'))
.by(select('entry').select(values))
.order().by(select('score'),desc).by(select('person1.id'),asc).by(select('person2.id'),asc)
.limit(100)